library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

-- Main module to control the displays
entity DisplayController is
    Port (
        clk       : in  STD_LOGIC;
        reset     : in  STD_LOGIC;
        number    : in  STD_LOGIC_VECTOR(9 downto 0);  -- Input number 0-999
        onesOut   : out STD_LOGIC_VECTOR(6 downto 0);
        tensOut   : out STD_LOGIC_VECTOR(6 downto 0);
        hundredsOut: out STD_LOGIC_VECTOR(6 downto 0)
    );
end DisplayController;

architecture Behavioral of DisplayController is
    signal ones, tens, hundreds : STD_LOGIC_VECTOR(3 downto 0);
begin
    -- Extract digits
    ones      <= std_logic_vector(to_unsigned((to_integer(unsigned(number mod 10))), 4));
    tens      <= std_logic_vector(to_unsigned((to_integer(unsigned(number mod 100 / 10))), 4));
    hundreds  <= std_logic_vector(to_unsigned((to_integer(unsigned(number / 100))), 4));

    -- Instantiate Decoder for each digit
    Decoder_ones: entity work.display_control
        port map (digit => ones, segments => onesOut);

    Decoder_tens: entity work.display_control
        port map (digit => tens, segments => tensOut);

    Decoder_hundreds: entity work.display_control
        port map (digit => hundreds, segments => hundredsOut);
end Behavioral;
